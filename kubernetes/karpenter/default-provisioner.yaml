apiVersion: karpenter.k8s.aws/v1alpha1
kind: AWSNodeTemplate
metadata:
  name: karpenter-default
spec:
  instanceProfile: ${eks-cluster-id}-managed-ondemand
  subnetSelector:
    kubernetes.io/cluster/${eks-cluster-id}: '*'
    kubernetes.io/role/internal-elb: '1'
  securityGroupSelector:
    aws:eks:cluster-name: ${eks-cluster-id}
  tags:
    karpenter.sh/cluster_name: ${eks-cluster-id}
---
apiVersion: karpenter.sh/v1alpha5
kind: Provisioner
metadata:
  name: default
spec:
  requirements:
    # - key: 'node.kubernetes.io/instance-type'
    #   operator: In
    #   values: ['m5.xlarge', 'm5a.xlarge', 'm5ad.xlarge', 'm5d.xlarge', 't2.xlarge', 't3.xlarge', 't3a.xlarge']
    - key: 'kubernetes.io/arch'
      operator: In
      values: ['amd64']
    - key: karpenter.sh/capacity-type
      operator: In
      values: ['spot', 'on-demand']
  providerRef:
    name: karpenter-default
    tags:
      karpenter.sh/cluster_name: ${eks-cluster-id}
      karpenter.sh/provisioner: default
  consolidation:
    enabled: true
  limits:
    resources:
      cpu: '200'
  labels:
    type: karpenter
  taints:
    - key: karpenter
      value: 'true'
      effect: NoSchedule
